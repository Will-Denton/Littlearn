[{"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/index.tsx":"1","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/App.tsx":"2","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/reportWebVitals.ts":"3","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/ConnectBluetooth.tsx":"4","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/BluetoothContext.tsx":"5","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothStatus.tsx":"6","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/DisconnectBluetooth.tsx":"7","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/SendRawBluetooth.tsx":"8","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx":"9","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/SendScript.tsx":"10","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/UploadButton.tsx":"11","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/Blockly.tsx":"12","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/serialization.js":"13","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/generators/javascript.js":"14","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/text.js":"15","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/toolbox.js":"16","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/print.js":"17"},{"size":554,"mtime":1695590840396,"results":"18","hashOfConfig":"19"},{"size":854,"mtime":1697073455229,"results":"20","hashOfConfig":"19"},{"size":425,"mtime":1695590840396,"results":"21","hashOfConfig":"19"},{"size":1337,"mtime":1695690746695,"results":"22","hashOfConfig":"19"},{"size":3681,"mtime":1695686219488,"results":"23","hashOfConfig":"19"},{"size":638,"mtime":1695690907540,"results":"24","hashOfConfig":"19"},{"size":854,"mtime":1695691026320,"results":"25","hashOfConfig":"19"},{"size":1271,"mtime":1695691823077,"results":"26","hashOfConfig":"19"},{"size":697,"mtime":1695691492665,"results":"27","hashOfConfig":"19"},{"size":565,"mtime":1695694650302,"results":"28","hashOfConfig":"19"},{"size":640,"mtime":1695695084218,"results":"29","hashOfConfig":"19"},{"size":1872,"mtime":1697652731718,"results":"30","hashOfConfig":"19"},{"size":925,"mtime":1697072571727,"results":"31","hashOfConfig":"19"},{"size":1240,"mtime":1697654139059,"results":"32","hashOfConfig":"19"},{"size":945,"mtime":1697652696061,"results":"33","hashOfConfig":"19"},{"size":17577,"mtime":1697654222568,"results":"34","hashOfConfig":"19"},{"size":744,"mtime":1697654252562,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"nexc9o",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/index.tsx",[],[],["93"],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/App.tsx",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/reportWebVitals.ts",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/ConnectBluetooth.tsx",["94","95","96"],[],"import React, { useState, useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction ConnectBluetooth() {\n  const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n  const [inputData, setInputData] = useState('');\n\n  const handleConnect = async () => {\n    try {\n      await connectToDevice();\n    } catch (error) {\n      console.error('Error connecting to Bluetooth device:', error);\n    }\n  };\n\n  const handleDisconnect = async () => {\n    try {\n      await disconnectDevice();\n    } catch (error) {\n      console.error('Error disconnecting from Bluetooth device:', error);\n    }\n  };\n\n  const handleSendData = async () => {\n    try {\n      if (inputData) {\n        await sendBluetoothData(inputData);\n        setInputData('');\n      }\n    } catch (error) {\n      console.error('Error sending data to Bluetooth device:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n\n  return (\n    <div>\n      <button onClick={handleConnect} disabled={bluetoothDevice !== null}>\n        Connect to Bluetooth Device\n      </button>\n    </div>\n  );\n}\n\nexport default ConnectBluetooth;\n","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/BluetoothContext.tsx",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothStatus.tsx",["97","98","99","100","101"],[],"import React, { useState, useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction BluetoothStatus() {\n  const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n\n\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n\n  return (\n    <div>\n      <p>Bluetooth Status: {bluetoothDevice ? 'Connected to ' + bluetoothDevice.name : 'Disconnected'}</p>\n    </div>\n  );\n}\n\nexport default BluetoothStatus;\n","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/DisconnectBluetooth.tsx",["102","103","104"],[],"import React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction DisconnectBluetooth() {\n  const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n\n  const handleDisconnect = async () => {\n    try {\n      await disconnectDevice();\n    } catch (error) {\n      console.error('Error disconnecting from Bluetooth device:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n\n  return (\n    <div>\n      <button onClick={handleDisconnect} disabled={bluetoothDevice === null}>\n        Disconnect from Bluetooth Device\n      </button>\n    </div>\n  );\n}\n\nexport default DisconnectBluetooth;\n","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/SendRawBluetooth.tsx",["105","106","107"],[],"import React, { useState, useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction SendRawBluetooth() {\n    const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n    const [inputData, setInputData] = useState('');\n\n    const handleSendData = async () => {\n        try {\n            if (inputData) {\n                await sendBluetoothData(inputData);\n                setInputData('');\n            }\n        } catch (error) {\n            console.error('Error sending data to Bluetooth device:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice]);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder={bluetoothDevice ? 'Send data to Bluetooth device' : 'Connect to Bluetooth device first'}\n                value={inputData}\n                onChange={(e) => setInputData(e.target.value)}\n            />\n            <button onClick={handleSendData}>Send Data</button>\n        </div>\n    );\n}\n\nexport default SendRawBluetooth;","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx",["108","109","110","111","112"],[],"import React, { useState, useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction BluetoothConsole() {\n    const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n    const [inputData, setInputData] = useState('');\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice]);\n\n    return (\n        <div>\n            <h3>Received Data:</h3>\n            <div>{outputText}</div>\n        </div>\n    );\n}\n\nexport default BluetoothConsole;","/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/SendScript.tsx",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/UploadButton.tsx",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/Blockly.tsx",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/serialization.js",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/generators/javascript.js",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/text.js",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/toolbox.js",[],[],"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/print.js",[],[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":5,"column":28,"nodeType":"117","messageId":"118","endLine":5,"endColumn":38},{"ruleId":"115","severity":1,"message":"119","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":16,"endColumn":25},{"ruleId":"115","severity":1,"message":"120","line":24,"column":9,"nodeType":"117","messageId":"118","endLine":24,"endColumn":23},{"ruleId":"115","severity":1,"message":"121","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":5,"column":28,"nodeType":"117","messageId":"118","endLine":5,"endColumn":38},{"ruleId":"115","severity":1,"message":"122","line":5,"column":40,"nodeType":"117","messageId":"118","endLine":5,"endColumn":55},{"ruleId":"115","severity":1,"message":"123","line":5,"column":57,"nodeType":"117","messageId":"118","endLine":5,"endColumn":73},{"ruleId":"115","severity":1,"message":"124","line":5,"column":75,"nodeType":"117","messageId":"118","endLine":5,"endColumn":92},{"ruleId":"115","severity":1,"message":"116","line":5,"column":28,"nodeType":"117","messageId":"118","endLine":5,"endColumn":38},{"ruleId":"115","severity":1,"message":"122","line":5,"column":40,"nodeType":"117","messageId":"118","endLine":5,"endColumn":55},{"ruleId":"115","severity":1,"message":"124","line":5,"column":75,"nodeType":"117","messageId":"118","endLine":5,"endColumn":92},{"ruleId":"115","severity":1,"message":"116","line":5,"column":30,"nodeType":"117","messageId":"118","endLine":5,"endColumn":40},{"ruleId":"115","severity":1,"message":"122","line":5,"column":42,"nodeType":"117","messageId":"118","endLine":5,"endColumn":57},{"ruleId":"115","severity":1,"message":"123","line":5,"column":59,"nodeType":"117","messageId":"118","endLine":5,"endColumn":75},{"ruleId":"115","severity":1,"message":"122","line":5,"column":42,"nodeType":"117","messageId":"118","endLine":5,"endColumn":57},{"ruleId":"115","severity":1,"message":"123","line":5,"column":59,"nodeType":"117","messageId":"118","endLine":5,"endColumn":75},{"ruleId":"115","severity":1,"message":"124","line":5,"column":77,"nodeType":"117","messageId":"118","endLine":5,"endColumn":94},{"ruleId":"115","severity":1,"message":"125","line":6,"column":12,"nodeType":"117","messageId":"118","endLine":6,"endColumn":21},{"ruleId":"115","severity":1,"message":"126","line":6,"column":23,"nodeType":"117","messageId":"118","endLine":6,"endColumn":35},"no-new-object",["127"],"@typescript-eslint/no-unused-vars","'outputText' is assigned a value but never used.","Identifier","unusedVar","'handleDisconnect' is assigned a value but never used.","'handleSendData' is assigned a value but never used.","'useState' is defined but never used.","'connectToDevice' is assigned a value but never used.","'disconnectDevice' is assigned a value but never used.","'sendBluetoothData' is assigned a value but never used.","'inputData' is assigned a value but never used.","'setInputData' is assigned a value but never used.","no-object-constructor"]