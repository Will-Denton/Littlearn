{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/\n\nexport const toolbox = {\n  'kind': 'categoryToolbox',\n  'contents': [{\n    'kind': 'category',\n    'name': 'Logic',\n    'categorystyle': 'logic_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'controls_if'\n    }, {\n      'kind': 'block',\n      'type': 'logic_compare'\n    }, {\n      'kind': 'block',\n      'type': 'logic_operation'\n    }, {\n      'kind': 'block',\n      'type': 'logic_negate'\n    }, {\n      'kind': 'block',\n      'type': 'logic_boolean'\n    }, {\n      'kind': 'block',\n      'type': 'logic_null'\n    }, {\n      'kind': 'block',\n      'type': 'logic_ternary'\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Loops',\n    'categorystyle': 'loop_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'controls_repeat_ext',\n      'inputs': {\n        'TIMES': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 10\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'controls_whileUntil'\n    }, {\n      'kind': 'block',\n      'type': 'controls_for',\n      'inputs': {\n        'FROM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        },\n        'TO': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 10\n            }\n          }\n        },\n        'BY': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'controls_forEach'\n    }, {\n      'kind': 'block',\n      'type': 'controls_flow_statements'\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Math',\n    'categorystyle': 'math_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'math_number',\n      'fields': {\n        'NUM': 123\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_arithmetic',\n      'inputs': {\n        'A': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        },\n        'B': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_single',\n      'inputs': {\n        'NUM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 9\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_trig',\n      'inputs': {\n        'NUM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 45\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_constant'\n    }, {\n      'kind': 'block',\n      'type': 'math_number_property',\n      'inputs': {\n        'NUMBER_TO_CHECK': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_round',\n      'fields': {\n        'OP': 'ROUND'\n      },\n      'inputs': {\n        'NUM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 3.1\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_on_list',\n      'fields': {\n        'OP': 'SUM'\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_modulo',\n      'inputs': {\n        'DIVIDEND': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 64\n            }\n          }\n        },\n        'DIVISOR': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 10\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_constrain',\n      'inputs': {\n        'VALUE': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 50\n            }\n          }\n        },\n        'LOW': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        },\n        'HIGH': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 100\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_random_int',\n      'inputs': {\n        'FROM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        },\n        'TO': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 100\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'math_random_float'\n    }, {\n      'kind': 'block',\n      'type': 'math_atan2',\n      'inputs': {\n        'X': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        },\n        'Y': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Text',\n    'categorystyle': 'text_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'text'\n    }, {\n      'kind': 'block',\n      'type': 'text_multiline'\n    }, {\n      'kind': 'block',\n      'type': 'text_join'\n    }, {\n      'kind': 'block',\n      'type': 'text_append',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': ''\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_length',\n      'inputs': {\n        'VALUE': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': 'abc'\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_isEmpty',\n      'inputs': {\n        'VALUE': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': ''\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_indexOf',\n      'inputs': {\n        'VALUE': {\n          'block': {\n            'type': 'variables_get'\n          }\n        },\n        'FIND': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': 'abc'\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_charAt',\n      'inputs': {\n        'VALUE': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_getSubstring',\n      'inputs': {\n        'STRING': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_changeCase',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': 'abc'\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_trim',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': 'abc'\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_count',\n      'inputs': {\n        'SUB': {\n          'shadow': {\n            'type': 'text'\n          }\n        },\n        'TEXT': {\n          'shadow': {\n            'type': 'text'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_replace',\n      'inputs': {\n        'FROM': {\n          'shadow': {\n            'type': 'text'\n          }\n        },\n        'TO': {\n          'shadow': {\n            'type': 'text'\n          }\n        },\n        'TEXT': {\n          'shadow': {\n            'type': 'text'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'text_reverse',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'text'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'add_text',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': 'abc'\n            }\n          }\n        },\n        'COLOR': {\n          'shadow': {\n            'type': 'colour_picker',\n            'fields': {\n              'COLOUR': '#aa00cc'\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Lists',\n    'categorystyle': 'list_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'lists_create_with'\n    }, {\n      'kind': 'block',\n      'type': 'lists_create_with'\n    }, {\n      'kind': 'block',\n      'type': 'lists_repeat',\n      'inputs': {\n        'NUM': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 5\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_length'\n    }, {\n      'kind': 'block',\n      'type': 'lists_isEmpty'\n    }, {\n      'kind': 'block',\n      'type': 'lists_indexOf',\n      'inputs': {\n        'VALUE': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_getIndex',\n      'inputs': {\n        'VALUE': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_setIndex',\n      'inputs': {\n        'LIST': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_getSublist',\n      'inputs': {\n        'LIST': {\n          'block': {\n            'type': 'variables_get'\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_split',\n      'inputs': {\n        'DELIM': {\n          'shadow': {\n            'type': 'text',\n            'fields': {\n              'TEXT': ','\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'lists_sort'\n    }, {\n      'kind': 'block',\n      'type': 'lists_reverse'\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Color',\n    'categorystyle': 'colour_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'colour_picker'\n    }, {\n      'kind': 'block',\n      'type': 'colour_random'\n    }, {\n      'kind': 'block',\n      'type': 'colour_rgb',\n      'inputs': {\n        'RED': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 100\n            }\n          }\n        },\n        'GREEN': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 50\n            }\n          }\n        },\n        'BLUE': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'colour_blend',\n      'inputs': {\n        'COLOUR1': {\n          'shadow': {\n            'type': 'colour_picker',\n            'fields': {\n              'COLOUR': '#ff0000'\n            }\n          }\n        },\n        'COLOUR2': {\n          'shadow': {\n            'type': 'colour_picker',\n            'fields': {\n              'COLOUR': '#3333ff'\n            }\n          }\n        },\n        'RATIO': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0.5\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'sep'\n  }, {\n    'kind': 'category',\n    'name': 'Variables',\n    'categorystyle': 'variable_category',\n    'custom': 'VARIABLE'\n  }, {\n    'kind': 'category',\n    'name': 'Functions',\n    'categorystyle': 'procedure_category',\n    'custom': 'PROCEDURE'\n  }, {\n    'kind': 'category',\n    'name': 'I/O',\n    'categorystyle': 'colour_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'colour_picker'\n    }, {\n      'kind': 'block',\n      'type': 'colour_random'\n    }, {\n      'kind': 'block',\n      'type': 'colour_rgb',\n      'inputs': {\n        'RED': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 100\n            }\n          }\n        },\n        'GREEN': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 50\n            }\n          }\n        },\n        'BLUE': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'colour_blend',\n      'inputs': {\n        'COLOUR1': {\n          'shadow': {\n            'type': 'colour_picker',\n            'fields': {\n              'COLOUR': '#ff0000'\n            }\n          }\n        },\n        'COLOUR2': {\n          'shadow': {\n            'type': 'colour_picker',\n            'fields': {\n              'COLOUR': '#3333ff'\n            }\n          }\n        },\n        'RATIO': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0.5\n            }\n          }\n        }\n      }\n    }]\n  }]\n};","map":{"version":3,"names":["toolbox"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/toolbox.js"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/\n\nexport const toolbox = {\n    'kind': 'categoryToolbox',\n    'contents': [\n      {\n        'kind': 'category',\n        'name': 'Logic',\n        'categorystyle': 'logic_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'controls_if',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_compare',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_operation',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_negate',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_boolean',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_null',\n          },\n          {\n            'kind': 'block',\n            'type': 'logic_ternary',\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Loops',\n        'categorystyle': 'loop_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'controls_repeat_ext',\n            'inputs': {\n              'TIMES': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 10,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'controls_whileUntil',\n          },\n          {\n            'kind': 'block',\n            'type': 'controls_for',\n            'inputs': {\n              'FROM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n              'TO': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 10,\n                  },\n                },\n              },\n              'BY': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'controls_forEach',\n          },\n          {\n            'kind': 'block',\n            'type': 'controls_flow_statements',\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Math',\n        'categorystyle': 'math_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'math_number',\n            'fields': {\n              'NUM': 123,\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_arithmetic',\n            'inputs': {\n              'A': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n              'B': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_single',\n            'inputs': {\n              'NUM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 9,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_trig',\n            'inputs': {\n              'NUM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 45,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_constant',\n          },\n          {\n            'kind': 'block',\n            'type': 'math_number_property',\n            'inputs': {\n              'NUMBER_TO_CHECK': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_round',\n            'fields': {\n              'OP': 'ROUND',\n            },\n            'inputs': {\n              'NUM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 3.1,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_on_list',\n            'fields': {\n              'OP': 'SUM',\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_modulo',\n            'inputs': {\n              'DIVIDEND': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 64,\n                  },\n                },\n              },\n              'DIVISOR': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 10,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_constrain',\n            'inputs': {\n              'VALUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 50,\n                  },\n                },\n              },\n              'LOW': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n              'HIGH': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 100,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_random_int',\n            'inputs': {\n              'FROM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n              'TO': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 100,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'math_random_float',\n          },\n          {\n            'kind': 'block',\n            'type': 'math_atan2',\n            'inputs': {\n              'X': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n              'Y': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Text',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'text',\n          },\n          {\n            'kind': 'block',\n            'type': 'text_multiline',\n          },\n          {\n            'kind': 'block',\n            'type': 'text_join',\n          },\n          {\n            'kind': 'block',\n            'type': 'text_append',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': '',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_length',\n            'inputs': {\n              'VALUE': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': 'abc',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_isEmpty',\n            'inputs': {\n              'VALUE': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': '',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_indexOf',\n            'inputs': {\n              'VALUE': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n              'FIND': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': 'abc',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_charAt',\n            'inputs': {\n              'VALUE': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_getSubstring',\n            'inputs': {\n              'STRING': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_changeCase',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': 'abc',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_trim',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': 'abc',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_count',\n            'inputs': {\n              'SUB': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_replace',\n            'inputs': {\n              'FROM': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n              'TO': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'text_reverse',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'add_text',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': 'abc',\n                  },\n                },\n              },\n              'COLOR': {\n                'shadow': {\n                  'type': 'colour_picker',\n                  'fields': {\n                    'COLOUR': '#aa00cc',\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Lists',\n        'categorystyle': 'list_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'lists_create_with',\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_create_with',\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_repeat',\n            'inputs': {\n              'NUM': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 5,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_length',\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_isEmpty',\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_indexOf',\n            'inputs': {\n              'VALUE': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_getIndex',\n            'inputs': {\n              'VALUE': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_setIndex',\n            'inputs': {\n              'LIST': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_getSublist',\n            'inputs': {\n              'LIST': {\n                'block': {\n                  'type': 'variables_get',\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_split',\n            'inputs': {\n              'DELIM': {\n                'shadow': {\n                  'type': 'text',\n                  'fields': {\n                    'TEXT': ',',\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_sort',\n          },\n          {\n            'kind': 'block',\n            'type': 'lists_reverse',\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Color',\n        'categorystyle': 'colour_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'colour_picker',\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_random',\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_rgb',\n            'inputs': {\n              'RED': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 100,\n                  },\n                },\n              },\n              'GREEN': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 50,\n                  },\n                },\n              },\n              'BLUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_blend',\n            'inputs': {\n              'COLOUR1': {\n                'shadow': {\n                  'type': 'colour_picker',\n                  'fields': {\n                    'COLOUR': '#ff0000',\n                  },\n                },\n              },\n              'COLOUR2': {\n                'shadow': {\n                  'type': 'colour_picker',\n                  'fields': {\n                    'COLOUR': '#3333ff',\n                  },\n                },\n              },\n              'RATIO': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0.5,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'sep',\n      },\n      {\n        'kind': 'category',\n        'name': 'Variables',\n        'categorystyle': 'variable_category',\n        'custom': 'VARIABLE',\n      },\n      {\n        'kind': 'category',\n        'name': 'Functions',\n        'categorystyle': 'procedure_category',\n        'custom': 'PROCEDURE',\n      },\n      {\n        'kind': 'category',\n        'name': 'I/O',\n        'categorystyle': 'colour_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'colour_picker',\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_random',\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_rgb',\n            'inputs': {\n              'RED': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 100,\n                  },\n                },\n              },\n              'GREEN': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 50,\n                  },\n                },\n              },\n              'BLUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'colour_blend',\n            'inputs': {\n              'COLOUR1': {\n                'shadow': {\n                  'type': 'colour_picker',\n                  'fields': {\n                    'COLOUR': '#ff0000',\n                  },\n                },\n              },\n              'COLOUR2': {\n                'shadow': {\n                  'type': 'colour_picker',\n                  'fields': {\n                    'COLOUR': '#3333ff',\n                  },\n                },\n              },\n              'RATIO': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0.5,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n    ],\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}