{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useBluetooth } from './BluetoothContext';\nexport function SendScript(script) {\n  _s();\n  const {\n    bluetoothDevice,\n    outputText,\n    connectToDevice,\n    disconnectDevice,\n    sendBluetoothData\n  } = useBluetooth();\n  const handleSendData = async () => {\n    try {\n      if (script) {\n        await sendBluetoothData(script);\n      }\n    } catch (error) {\n      console.error('Error sending data to Bluetooth device:', error);\n      return 0;\n    }\n  };\n  return 1;\n}\n_s(SendScript, \"aa0oozKuTJlSGQ+kNfD1WrQJc94=\", false, function () {\n  return [useBluetooth];\n});\n_c = SendScript;\nvar _c;\n$RefreshReg$(_c, \"SendScript\");","map":{"version":3,"names":["useBluetooth","SendScript","script","_s","bluetoothDevice","outputText","connectToDevice","disconnectDevice","sendBluetoothData","handleSendData","error","console","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/SendScript.tsx"],"sourcesContent":["import { useBluetooth } from './BluetoothContext';\n\n\nexport function SendScript(script: string) {\n\n\n    const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n\n    const handleSendData = async () => {\n        try {\n            if (script) {\n                await sendBluetoothData(script);\n            }\n        } catch (error) {\n            console.error('Error sending data to Bluetooth device:', error);\n            return 0;\n        }\n    };\n    return 1;\n}"],"mappings":";AAAA,SAASA,YAAY,QAAQ,oBAAoB;AAGjD,OAAO,SAASC,UAAUA,CAACC,MAAc,EAAE;EAAAC,EAAA;EAGvC,MAAM;IAAEC,eAAe;IAAEC,UAAU;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAkB,CAAC,GAAGR,YAAY,CAAC,CAAC;EAE5G,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,IAAIP,MAAM,EAAE;QACR,MAAMM,iBAAiB,CAACN,MAAM,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,OAAO,CAAC;IACZ;EACJ,CAAC;EACD,OAAO,CAAC;AACZ;AAACP,EAAA,CAhBeF,UAAU;EAAA,QAGwED,YAAY;AAAA;AAAAY,EAAA,GAH9FX,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}